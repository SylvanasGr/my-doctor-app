version: '3'

services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_DB: my_doctor_app
      POSTGRES_USER: pgtest
      POSTGRES_PASSWORD: pgtest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - doctor-app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./global/monitoring/prometheus:/etc/prometheus
    networks:
      - doctor-app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - doctor-app-network

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: user=pgtest password=pgtest dbname=my_doctor_app host=postgres sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - doctor-app-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - doctor-app-network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    networks:
      - doctor-app-network
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data


volumes:
  postgres_data_doctor_app:
  keycloak_data:
  grafana_data:

networks:
  doctor-app-network:
    driver: bridge

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
#    ports:
#      - "9200:9200"
#    environment:
#      - "discovery.type=single-node"
#    volumes:
#      - ./elasticsearch/data:/usr/share/elasticsearch/data:rw              # Persistence data
#      - elasticsearchData:/usr/share/elasticsearch/data:Z
#    networks:
#      - doctor-app-network

#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.17.8
#    ports:
#      - "25826:25826"
#      - "5044:5044"
#      - "50000:50000/tcp"
#      - "50000:50000/udp"
#      - "9600:9600"
#    volumes:
#      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro                # Pipeline configuration
#    restart: on-failure
#    depends_on:
#      - elasticsearch
#    networks:
#      - doctor-app-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.17.8
#    ports:
#      - "5601:5601"
#    restart: on-failure
#    depends_on:
#      - elasticsearch
#    networks:
#      - doctor-app-network
#
##  filebeat:
##    image: docker.elastic.co/beats/filebeat:7.17.8
##    volumes:
##      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
##      - /var/lib/docker/containers:/var/lib/docker/containers:ro
##      - /var/run/docker.sock:/var/run/docker.sock:ro
##      - ./filebeat/data:/usr/share/filebeat/data:rw
##    user: root
##    restart: on-failure
##    depends_on:
##      - logstash
##    entrypoint: "filebeat -e -strict.perms=false"
##    networks:
##      - doctor-app-network
#

#  elasticsearchData:
##  filebeatData:
#
